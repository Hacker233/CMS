{"version":3,"file":"FileWithEmbeddedBlockMapDifferentialDownloader.js","sourceRoot":"","sources":["../../src/differentialDownloader/FileWithEmbeddedBlockMapDifferentialDownloader.ts"],"names":[],"mappings":";;;;;;;AAAA,AAAO,AAAE,AAAwB,AAAE,AAAM,AAAsC;;;;;;;;;;AAC/E,AAAO,AAAE,AAAsB,AAAE,AAAY,AAAE,AAAM,AAA0B,AAE/E,AAAM;;;;;;;;;;MAAsD,uDAAQ,AAAsB;AACxF,AAAK,QAAC,AAAQ;AACZ,UAAM,AAAW,cAAG,AAAI,KAAC,AAAkB;AAC3C,UAAM,AAAQ,WAAG,AAAW,YAAC,AAAM;AACnC,UAAM,AAAM,SAAG,AAAQ,AAAG,YAAC,AAAW,YAAC,AAAc,eAAG,AAAC,AAAC;AAC1D,AAAI,SAAC,AAAkB,qBAAG,MAAM,AAAI,KAAC,AAAe,gBAAC,AAAM,QAAE,AAAQ,WAAG,AAAC,AAAC;AAC1E,UAAM,AAAW,cAAG,MAAM,AAAY,4CAAC,AAAI,KAAC,AAAkB,mBAAC,AAAK,MAAC,AAAC,GAAE,AAAI,KAAC,AAAkB,mBAAC,AAAM,SAAG,AAAC,AAAC,AAAC;AAC5G,UAAM,AAAI,KAAC,AAAU,WAAC,AAAI,KAAC,AAAK,OAAC,MAAM,AAAwB,6CAAC,AAAI,KAAC,AAAO,QAAC,AAAO,AAAC,AAAC,YAAE,AAAW,AAAC,AACtG;AAAC,AACF","sourcesContent":["import { readEmbeddedBlockMapData } from \"builder-util-runtime/out/blockMapApi\"\nimport { DifferentialDownloader, readBlockMap } from \"./DifferentialDownloader\"\n\nexport class FileWithEmbeddedBlockMapDifferentialDownloader extends DifferentialDownloader {\n  async download() {\n    const packageInfo = this.blockAwareFileInfo\n    const fileSize = packageInfo.size!!\n    const offset = fileSize - (packageInfo.blockMapSize!! + 4)\n    this.fileMetadataBuffer = await this.readRemoteBytes(offset, fileSize - 1)\n    const newBlockMap = await readBlockMap(this.fileMetadataBuffer.slice(0, this.fileMetadataBuffer.length - 4))\n    await this.doDownload(JSON.parse(await readEmbeddedBlockMapData(this.options.oldFile)), newBlockMap)\n  }\n}"]}
